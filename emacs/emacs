(require 'package)

(add-to-list 'package-archives '("org" . "https://orgmode.org/elpa/") t)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/") t)

(add-to-list 'auto-mode-alist '("\\.\\(org\\)$" . org-mode))

(setq package-enable-at-startup nil)
(package-initialize)

(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(eval-when-compile
  (require 'use-package))

(require 'use-package-ensure)
(setq use-package-always-ensure t)

(setq evil-want-keybinding nil)
(use-package evil)
(use-package evil-surround)
(use-package evil-matchit)
(use-package evil-collection)

;; (require 'evil)
(evil-mode t)

(use-package org
  :bind ("A-<tab>" . pcomplete)
  :config
  (setq org-refile-targets '((nil :maxlevel . 9))
        org-refile-use-outline-path 'file
        org-outline-path-complete-in-steps nil
        )
  )

(use-package org-evil)
(use-package evil-org
  :ensure t
  :after org
  :config
  (add-hook 'org-mode-hook 'evil-org-mode)
  (add-hook 'evil-org-mode-hook
        (lambda ()
          (evil-org-set-key-theme)))
  (require 'evil-org-agenda)
  (evil-org-agenda-set-keys))

(use-package deft :commands deft)
(setq deft-directory "~/notes"
      deft-extensions '("org" "md" "markdown" "txt" "text")
      deft-use-filter-string-for-filename t
      deft-file-naming-rules
        '((noslash . "-")
          (nospace . "-")
          (case-fn . downcase))
      deft-markdown-mode-title-level 1
      deft-org-mode-title-prefix t)

(use-package markdown-mode
  :mode (("README\\.md\\'" . gfm-mode)
         ("\\.md\\'" . markdown-mode)
         ("\\.markdown\\'" . markdown-mode))
  :init (setq markdown-command "multimarkdown"))

(use-package helm)
(use-package magit)
(use-package projectile)

(use-package kotlin-mode)

(use-package zenburn-theme)
(load-theme 'zenburn t)

(setq plantuml-jar-path
      (expand-file-name "~/.emacs.d/plantuml/plantuml.jar"))

(use-package plantuml-mode
  :config 
          (setq plantuml-jar-path plantuml-jar-path)
          (setq plantuml-default-exec-mode 'jar))

(setq org-plantuml-jar-path plantuml-jar-path)
(org-babel-do-load-languages
 'org-babel-load-languages
 '(
   (plantuml . t)))

(use-package auto-package-update
  :config
  (setq auto-package-update-delete-old-versions t)
  (setq auto-package-update-hide-results t)
  (auto-package-update-maybe))

(ido-mode t)

(use-package yasnippet
  :config
  (yas-global-mode 1))

(use-package yasnippet-snippets
  :after yasnippet )

(set-default 'truncate-lines t)

(global-set-key (kbd "C-c l") 'org-store-link)
(global-set-key (kbd "C-c a") 'org-agenda)
(global-set-key (kbd "C-c c") 'org-capture)
(global-set-key (kbd "C-c b") 'org-switchb)

;; backup configuration
;; Default and per-save backups go here:
(setq backup-directory-alist '(("" . "~/.emacs.d/backup/per-save")))

(setq vc-make-backup-files t)

(setq version-control t ;; Use version numbers for backups.
    kept-new-versions 10 ;; Number of newest versions to keep.
    kept-old-versions 0 ;; Number of oldest versions to keep.
    delete-old-versions t ;; Don't ask to delete excess backup versions.
    backup-by-copying t) ;; Copy all files, don't rename them.

;; set the default font to victor on a mac
(when (eq system-type 'darwin)
  (set-face-attribute 'default nil :family "Victor Mono"))

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(face-font-family-alternatives
   (quote
    (("Monospace" "Victor Mono" "courier" "fixed")
     ("Monospace Serif" "Victor Mono" "Courier 10 Pitch" "Consolas" "Courier Std" "FreeMono" "Nimbus Mono L" "courier" "fixed")
     ("courier" "CMU Typewriter Text" "fixed")
     ("Sans Serif" "helv" "helvetica" "arial" "fixed")
     ("helv" "helvetica" "arial" "fixed"))))
 '(fill-column 100)
 '(indent-tabs-mode nil)
 '(inhibit-startup-screen t)
 '(org-agenda-files
   (quote
    ("~/Dropbox/org/personal.org" "~/Dropbox/org/work.org")))
 '(package-selected-packages
   (quote
    (plantuml-mode mmm-mode yasnippet-snippets ya-snippet evil-org-agenda markdown-mode deft evil-collection evil-org auto-package-update projectile org-evil evil-matchit evil-surround magit helm evil use-package)))
 '(safe-local-variable-values (quote ((truncate-lines . f)))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
