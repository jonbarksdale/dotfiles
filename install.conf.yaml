- defaults:
    link:
      relink: true
      create: true

- create:
    - ~/.config
    - ~/.vim/undo-history

- clean: ["~", "~/.zsh.d"]
- clean:
    ~/.config:
      recursive: true
    ~/.vim:
      recursive: true
      force: true

- link:
    ~/.dotfiles: ""
    ~/.asciidoc/asciidoc.conf:
      path: asciidoc/asciidoc.conf
      create: true
    ~/.config/git/includes/alias:
      path: git/includes/alias
    ~/.config/git/includes/themes.gitconfig:
      path: git/includes/themes.gitconfig
    ~/.config/git/:
      glob: true
      path: git/*
      exclude: [git/includes]
    ~/.config/sheldon/zsh:
      path: zsh/sheldon
      create: true
    ~/.editrc: editline/editrc
    ~/.emacs.d: doom-emacs
    ~/.doom.d/:
      create: true
      glob: true
      path: emacs/*.el
    ~/.doom.d/snippets/fundamental-mode/:
      create: true
      glob: true
      path: emacs/snippets/fundamental-mode/*
    ~/.doom.d/snippets/org-mode/options:
      create: true
      path: emacs/snippets/org-mode/options
    ~/.ideavimrc: idea/ideavimrc
    ~/.inputrc: readline/inputrc
    ~/.tmux.conf: tmux/tmux.conf
    ~/.vimrc: vim/vimrc
    ~/.config/bat/config:
      create: true
      path: bat/config
    ~/.config/starship.toml: zsh/starship.toml
    ~/.zshrc: zsh/zshrc

- shell:
    - [git submodule update --init --recursive, Installing submodules]
    - description: install homebrew
      command: |
        if [ "$(uname -s)" = "Darwin" || "$(uname -s)" = "Linux" ]; then
          if ! command -v brew &> /dev/null; then
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          fi
        fi
      stdout: true
      stdin: true

- brew:
    - zsh-completions
    - bash
    - zsh
    - sheldon
    - fzf
    - zoxide
    - ripgrep
    - eza
    - fd
    - broot
    - git-delta
    - dust
    - ouch
    - procs
    - rnr
    - sd
    - tealdeer
    - topgrade
    - qsv
    - xh
    - vim
    - neovim
    - ispell
    - aspell
    - hunspell
    - graphviz
    - gcc
    - cloc
    - thefuck
    - fontconfig
    - coreutils
    - ssh-copy-id
    - git
    - mas
    - jq
    - htop
    - openssl
    - gh
    - bat
    - grep
    - gnu-sed
    - starship
    - gpg
    - gawk
    - ranger
    - w3m
    - most
    - languagetool
    - duf
    - httpie
    - ncdu
    - fx
    - lazydocker
    - glow
    - ki
    - sqlite
    - wordnet
    - proselint
    - aws-vault
    - awscli
    - localstack

# TODO: fork dotbot-brew and add a way to check if the app is otherwise installed
- cask:
    - raycast
    - launchbar
    - iterm2
    - spotify
    - jetbrains-toolbox
    - 1password
    - contexts
    - daisydisk
    - signal
    - visual-studio-code
    - beyond-compare

# if one fails, nothing afterwards is tried
# TODO: fork dotbot-brew and add a font command for checking the existence of fonts
- cask:
    - font-victor-mono
    - font-victor-mono-nerd-font
    - font-meslo-lg-nerd-font
    - font-dejavu
    - font-dejavu-sans-mono-nerd-font
    - font-fira-code-nerd-font
    - font-fira-mono-nerd-font
    - font-jetbrains-mono-nerd-font
    - font-latin-modern-math
    - font-stix-two-math
    - font-noto-color-emoji
    - font-noto-emoji
    - font-noto-sans
    - font-noto-sans-math
    - font-noto-sans-symbols
    - font-noto-sans-symbols-2

- tap:
    - d12frosted/emacs-plus

- brew:
    - gnutls
    - jansson
    - libxml2
    - texinfo
    - imagemagick
    - d12frosted/emacs-plus/emacs-plus@30 --with-dbus --with-debug --with-imagemagick --with-native-comp

- install-rustup: true

# these are all things without completion installs in brew
- cargo:
    - choose
    - rm-improved
    - tokei --all-features
    - xcp
    - whyq

- shell:
    - command: ~/.emacs.d/bin/doom env
      description: Generating doom envvar
      stdout: true
      stderr: true
    - command: ~/.emacs.d/bin/doom sync
      description: Syncing doom
      stdout: true
      stderr: true
    - command: which sdk || curl -s "https://get.sdkman.io?rcupdate=false" | bash
      description: Install SDKMAN!
      stdout: true
      stderr: true
    - command: which volta || curl https://get.volta.sh | bash -s -- --skip-setup
      description: Install Volta
      stdout: true
      stderr: true
    - command: mas upgrade
      description: upgrade apps
      stdout: true
      stderr: true
